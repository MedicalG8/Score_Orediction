from flask import Flask, render_template, request

app = Flask(__name__)

NA = "Not Applicable"

data = [
    ['SC', 476, 552, 534],
    ['ST', 357, 404, 425],
    ['VJ', 537, 595, 597],
    ['NT(B)', 440, 577, 547],
    ['NT(C)', 537, 618, 604],
    ['NT(D)', 559, 635, 618],
    ['OBC', 563, 619, 601],
    ['EWS', 528, 615, 621],
    ['OPEN', 601, 629, 622],
    ['SC', 457,533,352],
    ['ST',326,340,399],
    ['ST',326,340,399],
    ['VJ',510,569,559],
    ['NT(B)',437,565,553],
    ['NT(C)',535,594,602],
    ['NT(D)',549,621,611],
    ['OBC',551,612,604],
    ['EWS',530,610,616],
    ['OPEN',600,631,622],
    ['SC',505,582,576],
    ['ST',377,435,447],
    ['VJ',572,635,622],
    ['NT(B)',509,586,600],
    ['NT(C)',549,630,627],
    ['NT(D)',601,650,615],
    ['OBC',595,641,632],
    ['EWS',563,645,638],
    ['OPEN',636,657,658],
    ['SC',453,539,532],
    ['ST',334,346,412],
    ['VJ',533,605,574],
    ['NT(B)',436,560,527],
    ['NT(C)',537,609,613],
    ['NT(D)',572,623,615],
    ['OBC',561,627,607],
    ['EWS',536,617,616],
    ['OPEN',601,630,621],
    ['SC',450,518,511],
    ['ST',315,335,350],
    ['VJ',487,558,557],
    ['NT(B)',431,524,503],
    ['NT(C)',511,567,580],
    ['NT(D)',567,607,566],
    ['OBC',537,597,587],
    ['EWS',514,598,601],
    ['OPEN',516,618,605],
    ['SC',460,540,550],
    ['ST',354,441,428],
    ['VJ',505,572,574],
    ['NT(B)',484,546,558],
    ['NT(C)',547,596,610],
    ['NT(D)',550,626,626],
    ['OBC',560,617,607],
    ['EWS',526,612,623],
    ['OPEN',600,635,630],
    ['SC',431,502,599],
    ['ST',305,357,361],
    ['VJ',462,529,525],
    ['NT(B)',425,505,502],
    ['NT(C)',510,568,584],
    ['NT(D)',531,596,580],
    ['OBC',535,588,583],
    ['EWS',501,587,588],
    ['OPEN',570,599,589],
    ['SC',430,492,493],
    ['ST',294,355,360],
    ['VJ',483,526,540],
    ['NT(B)',429,511,496],
    ['NT(C)',505,573,578],
    ['NT(D)',529,590,587],
    ['OBC',530,581,576],
    ['EWS',506,585,582],
    ['OPEN',569,596,583],
    ['SC',424,484,480],
    ['ST',296,327,360],
    ['VJ',460,520,518],
    ['NT(B)',421,498,491],
    ['NT(C)',492,558,565],
    ['NT(D)',516,569,566],
    ['OBC',522,571,561],
    ['EWS',492,572,569],
    ['OPEN',554	,579,563],
    ['SC',428,494,494],
    ['ST',310,334,372],
    ['VJ',490,530,540],
    ['NT(B)',426,500,495],
    ['NT(C)',499,563,575],
    ['NT(D)',518,584,574],
    ['OBC',523,580,566],
    ['EWS',600,600,580],
    ['OPEN',567,593,582],
    ['SC',441,525,516],
    ['ST',319,357,387],
    ['VJ',482,560,555],
    ['NT(B)',430,539,513],
    ['NT(C)',521,588,592],
    ['NT(D)',550,615,585],
    ['OBC',545,605,593],
    ['EWS',513,602,610],
    ['OPEN',529,622,613],
    ['SC',421,482,478],
    ['ST',290,327,350],
    ['VJ',460,519,510],
    ['NT(B)',410,494,488],
    ['NT(C)',496,554,556],
    ['NT(D)',517,570,560],
    ['OBC',516,570,558],
    ['EWS',492,570,563],
    ['OPEN',549,567,563],
    ['SC',427,494,500],
    ['ST',302,344,365],
    ['VJ',495,536,515],
    ['NT(B)',407,519,494],
    ['NT(C)',499,568,586],
    ['NT(D)',534,582,586],
    ['OBC',417,579,570],
    ['EWS',600,536,582],
    ['OPEN',563,592,583],
    ['SC',600,477,469],
    ['ST',600,326,347],
    ['VJ',600,521,506],
    ['NT(B)',600,488,484],
    ['NT(C)',600,553,548],
    ['NT(D)',600,568,549],
    ['OBC',600,567,554],
    ['EWS',600,600,557],
    ['OPEN',600,571,557],
    ['SC',513,549,581],
    ['ST',389,421,409],
    ['VJ',493,558,467],
    ['NT(B)',544,573,527],
    ['NT(C)',524,576,581],
    ['NT(D)',548,608,596],
    ['OBC',574,608,602],
    ['EWS',540,598,599],
    ['OPEN',582,615,603],
    ['SC',496,533,508],
    ['ST',370,385,379],
    ['VJ',485,552,546],
    ['NT(B)',494,544,521],
    ['NT(C)',512,568,572],
    ['NT(D)',541,594,580],
    ['OBC',564,600,590],
    ['EWS',524,586,591],
    ['OPEN',566,601,592],
    ['SC',467,492,485],
    ['ST',330,336,349],
    ['VJ',473,524,516],
    ['NT(B)',468,505,508],
    ['NT(C)',501,556,559],
    ['NT(D)',522,570,566],
    ['OBC',534,576,563],
    ['EWS',501,571,564],
    ['OPEN',539,578,565],
    ['SC',468,493,483],
    ['ST',324,336,353],
    ['VJ',468,528,522],
    ['NT(B)',458,503,520],
    ['NT(C)',506,556,564],
    ['NT(D)',530,583,560],
    ['OBC',541,584,563],
    ['EWS',505,573,570],
    ['OPEN',550,581,571],
    ['SC',549,486,475],
    ['ST',329,335,348],
    ['VJ',468,522,505],
    ['NT(B)',460,499,504],
    ['NT(C)',481,553,546],
    ['NT(D)',518,569,547],
    ['OBC',530,571,557],
    ['EWS',591,568,559],
    ['OPEN',534,574,560],
    ['SC',450,480,472],
    ['ST',302,327,346],
    ['VJ',471,521,507],
    ['NT(B)',446,492,491],
    ['NT(C)',466,552,544],
    ['NT(D)',508,567,541],
    ['OBC',526,569,564],
    ['EWS',489,568,555],
    ['OPEN',528,571,557],
    ['SC',473,494,490],
    ['ST',327,354,378],
    ['VJ',490,533,536],
    ['NT(B)',484,504,545],
    ['NT(C)',511,560,575],
    ['NT(D)',559,573,572],
    ['OBC',543,579,581],
    ['EWS',NA,600,583],
    ['OPEN',565,592,585],
    ['SC',476,517,506],
    ['ST',361,339,387],
    ['VJ',513,560,533],
    ['NT(B)',483,526,504],
    ['NT(C)',541,585,587],
    ['NT(D)',567,609,601],
    ['OBC',559,599,590],
    ['EWS',539,595,604],
    ['OPEN',575,612,599],
    ['SC',465,496,498],
    ['ST',336,349,374],
    ['VJ',512,536,540],
    ['NT(B)',480,530,500],
    ['NT(C)',525,562,565],
    ['NT(D)',545,576,571],
    ['OBC',537,578,567],
    ['EWS',501,581,575],
    ['OPEN',541,589,580],
    ['SC',453,488,487],
    ['ST',321,338,353],
    ['VJ',494,537,514],
    ['NT(B)',472,496,490],
    ['NT(C)',512,561,562],
    ['NT(D)',537,577,567],
    ['OBC',528,572,562],
    ['EWS',507,576,572],
    ['OPEN',533,580,572],
    ['SC',457,490,486],
    ['ST',322,346,356],
    ['VJ',503,527,540],
    ['NT(B)',486,509,493],
    ['NT(C)',516,567,564],
    ['NT(D)',533,576,570],
    ['OBC',528,575,568],
    ['EWS',600,60,577],
    ['OPEN',539,584,576],
    ['SC',NA,NA,476],
    ['ST',NA,NA,345],
    ['VJ',NA,NA,507],
    [['NT(B)',NA,NA,489],
    ['NT(C)',NA,NA,555],
    ['NT(D)',NA,NA,555],
    ['OBC',NA,NA,557],
    ['EWS',NA,NA,564],
    ['OPEN',NA,NA,570],
    ['SC',NA,NA,468],
    ['ST',NA,NA,345],
    ['VJ',NA,NA,507],
    ['NT(B)',NA,NA,488],
    ['NT(C)',NA,NA,547],
    ['NT(D)',NA,NA,548],
    ['OBC',NA,NA,553],
    ['EWS',NA,NA,560],
    ['OPEN',NA,NA,560],
    ['SC',NA,NA,473],
    ['ST',NA,NA,346],
    ['VJ',NA,NA,514],
    ['NT(B)',NA,NA,487],
    ['NT(C)',NA,NA,556],
    ['NT(D)',NA,NA,567],
    ['OBC',NA,NA,556],
    ['EWS',NA,NA,567],
    ['OPEN',NA,NA,567],
    ['SC',423,492,484],
    ['ST',303,325,343],
    ['VJ',495,514,600],
    ['NT(B)',NA,496,488],
    ['NT(C)',NA,551,535],
    ['NT(D)',493,NA,565],
    ['OBC',514,558,541],
    ['OPEN',551,568,546],
    ['NRI',165,357,174],
    ['SC',419,480,477],
    ['ST',280,327,343],
    ['VJ',488,153,508],
    ['NT(B)',400,491,482],
    ['NT(C)',495,551,541],
    ['NT(D)',515,564,354],
    ['OBC',511,562,549],
    ['OPEN',536,564,550],
    ['NRI',NA,162,150],
    ['SC',415,478,470],
    ['ST',268,325,339],
    ['VJ',450,507,497],
    ['NT(B)',429,474,486],
    ['NT(C)',492,544,524],
    ['NT(D)',519,549,532],
    ['OBC',492,539,527],
    ['OPEN',492,541,527],
    ['NRI',NA,141,126],
    ['SC',410,477,472],
    ['ST',281,327,342],
    ['VJ',451,511,505],
    ['NT(B)',429,466,484],
    ['NT(C)',484,550,545],
    ['NT(D)',506,556,539],
    ['OBC',509,556,544],
    ['OPEN',510,556,545],
    ['NRI',224,157,142],
    ['SC',399,470,463],
    ['ST',271,320,330],
    ['VJ',459,510,503],
    ['NT(B)',410,487,474],
    ['NT(C)',487,538,521],
    ['NT(D)',476,551,524],
    ['OBC',489,549,530],
    ['OPEN',500,553,532],
    ['NRI',443,NA,175],
    ['SC',400,471,466],
    ['ST',263,325,336],
    ['VJ',450,509,502],
    ['NT(B)',405,475,476],
    ['NT(C)',484,535,525],
    '[NT(D)',500,546,542],
    ['OBC',493,538,524],
    ['OPEN',493,539,526],
    ['NRI',229,151,119],
    ['SC',415,478,481],
    ['ST',267,328,349],
    ['VJ',472,506,510],
    ['NT(B)',472,475,486],
    ['NT(C)',487,527,529],
    ['NT(D)',477,537,536],
    ['OBC',482,524,525],
    ['OPEN',485,526,527],
    ['NRI',278,143,120],
    ['SC',410,473,467],
    ['ST',264,321,329],
    ['VJ',447,506,492],
    ['NT(B)',410,473,467],
    ['NT(C)',NA,532,533],
    ['NT(D)',490,541,521],
    ['OBC',486,522,518],
    ['OPEN',485,527,518],
    ['NRI',271,165,118],
    ['SC',398,472,466],
    ['ST',266,320,330],
    ['VJ',470,512,495],
    ['NT(B)',400,473,479],
    ['NT(C)',476,544,540],
    ['NT(D)',490,546,534],
    ['OBC',488,545,531],
    ['OPEN',486,546,532],
    ['NRI',268,463,149],
    ['SC',399,470,465],
    ['ST',267,320,333],
    ['VJ',447,505,492],
    ['NT(B)',392,474,468],
    ['NT(C)',472,526,518],
    ['NT(D)',470,529,516],
    ['OBC',476,523,512],
    ['OPEN',476,521,514],
    ['NRI',295,214,122],
    ['SC',398,468,461],
    ['ST',270,314,327],
    ['VJ',454,507,489],
    ['NT(B)',393,481,465],
    ['NT(C)',469,426,508],
    ['NT(D)',487,526,514],
    ['OBC',470,525,507],
    ['OPEN',468,522,508],
    ['NRI',NA,187,129],
    ['SC',397,471,464],
    ['ST',269,323,332],
    ['VJ',454,506,492],
    ['NT(B)',397,463,459],
    ['NT(C)',472,524,512],
    ['NT(D)',480,521,527],
    ['OBC',475,520,511],
    ['OPEN',475,520,513],
    ['NRI',215,168,132],
    ['SC',379,446,435],
    ['ST',247,NA,321],
    ['NT(B)',NA,NA,451],
    ['NT(C)',453,NA,486],
    ['OBC',413,456,432],
    ['OPEN',416,457,443],
    ['NRI',NA,148,111],
    ['SC',NA,467,461],
    ['ST',NA,319,328],
    ['VJ',NA,500,490],
    ['NT(B)',NA,460,467],
    ['NT(C)',NA,519,506],
    ['NT(D)',NA,518,511],
    ['OBC',NA,516,506],
    ['OPEN',NA,516,507],
    ['NRI',NA,153,121],
    ['SC',450,480,472],
    ['ST',311,316,330],
    ['VJ',455,505,495],
    ['NT(B)',451,482,466],
    ['NT(C)',463,546,510],
    ['NT(D)',495,536,516],
    ['OBC',501,534,515],
    ['OPEN',500,535,516],
    ['NRI',145,150,112],
    ['SC',446,473,469],
    ['ST',299,320,335],
    ['VJ',462,512,500],
    ['NT(B)',439,482,474],
    ['NT(C)',452,534,522],
    ['NT(D)',502,527,518],
    ['OBC',595,536,517],
    ['OPEN',595,534,519],
    ['NRI',284,149,111],
    ['SC',444,473,469],
    ['ST',297,325,337],
    ['VJ',456,511,512],
    ['NT(B)',449,471,470],
    ['NT(C)',486,533,526],
    ['NT(D)',510,546,536],
    ['OBC',501,545,530],
    ['OPEN',501,545,533],
    ['NRI',299,115,148],
    ['OPEN',437,520,508],
    ['NRI',244,118,128],
    ['SC',NA,NA,461],
    ['ST',NA,NA,327],
    ['VJ',NA,NA,494],
    ['NT(B)',NA,NA,464],
    ['NT(C)',NA,NA,505],
    ['NT(D)',NA,NA,509],
    ['OBC',NA,NA,505],
    ['OPEN',NA,NA,505],
    ['SC',NA,NA,475],
    ['ST',NA,NA,349],
    ['VJ',NA,NA,518],
    ['NT(B)',NA,NA,488],
    ['NT(C)',NA,NA,539],
    ['NT(D)',NA,NA,548],
    ['OBC',NA,NA,549],
    ['OPEN',NA,NA,551],
    ['NRI',NA,NA,416],
    

]

def admission_predictor(data, score, category):
    for row in data:
        if row[0] == category:
            if score >= min(row[1:]):
                return True
            else:
                return False
    return False

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/predict', methods=['POST'])
def predict():
    score = int(request.form['score'])
    category = request.form['category']
    if admission_predictor(data, score, category):
        message = "Congratulations! You are eligible for admission. Find out which colleges you can get admission, subscribe to our one time plan for just 199 rupees."
    else:
        message = "Sorry, You are not eligible for admission. Please contact Medical Guidance to know the other chances for Admission."
    return render_template('result.html', message=message)

if __name__ == '__main__':
    app.run(debug=True)
